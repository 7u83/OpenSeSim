/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package traders.ManTrader;

import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JSpinner;
import javax.swing.text.DefaultFormatter;
import sesim.Account;
import sesim.Exchange;
import sesim.Exchange.OrderType;
import sesim.Quote;

/**
 *
 * @author tube
 */
public class EditOrderPanel extends javax.swing.JPanel {

    Exchange se;
    Account account;
    OrderType type;

    /**
     * Creates new form EditOrderPanel
     */
    public EditOrderPanel() {
        initComponents();

        JSpinner spinner = limitSpinner;
        JComponent comp = spinner.getEditor();
        JFormattedTextField field = (JFormattedTextField) comp.getComponent(0);
        DefaultFormatter formatter = (DefaultFormatter) field.getFormatter();
        formatter.setCommitsOnValidEdit(true);

        spinner = volumeSpinner;
        comp = spinner.getEditor();
        field = (JFormattedTextField) comp.getComponent(0);
        formatter = (DefaultFormatter) field.getFormatter();
        formatter.setCommitsOnValidEdit(true);

    }

    public EditOrderPanel(Exchange e, Account a, OrderType t) {
        this();
        se = e;
        account = a;
        type = t;
        this.loadFields();
    }

    private void loadFields() {
        System.out.printf("Load pressed\n");
        if (se == null) {
            return;
        }

        System.out.printf("Load now\n");

        Quote q = se.getBestPrice_0();
        Float price = q == null ? 0.0f : q.price;

        if (type == OrderType.BUYLIMIT) {
            this.limitSpinner.setValue(se.roundMoney(price));
            this.volumeSpinner.setValue(se.roundShares(account.getMoney() / price));
        }
        if (type == OrderType.SELLLIMIT) {
            this.limitSpinner.setValue(se.roundMoney(price));
            this.volumeSpinner.setValue(se.roundShares(account.getShares()));
        }
        setPrice();
    }

    private void setPrice() {
        float price = this.getPrice();
        String s = se.getMoneyFormatter().format(price);
        this.priceLabel.setText(s);
    }

    public float getPrice() {
        float price = this.getVolume() * this.getLimit();
        price = se.roundMoney(price);
        return price;
    }

    public float getVolume() {
        return (float) volumeSpinner.getValue();

    }

    public float getLimit() {
        return (float) limitSpinner.getValue();
    }

    /*    float limit = (float) limitSpinner.getValue();

        if (account == null) {
            System.out.printf("Account is null\n");
        }
        OrderType type = this.getOrderType();

        new Thread() {
            @Override
            public void run() {
               se.createOrder(account, type, volume, limit);
            }
        }.start();*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeComboBox = new javax.swing.JComboBox<>();
        limitSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        volumeSpinner = new javax.swing.JSpinner();
        loadValuesButton = new javax.swing.JButton();
        priceLabel = new javax.swing.JLabel();
        setVolButton = new javax.swing.JButton();

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buy Limit", "Sell Limit", "Sell", "Buy" }));

        limitSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        limitSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                limitSpinnerStateChanged(evt);
            }
        });

        jLabel3.setText("Limit:");

        jLabel4.setText("Volume:");

        volumeSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        volumeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumeSpinnerStateChanged(evt);
            }
        });

        loadValuesButton.setText("Set limit");
        loadValuesButton.setToolTipText("Set limit to the curent \ntraded price.");
        loadValuesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadValuesButtonActionPerformed(evt);
            }
        });

        priceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel.setText("0.00");

        setVolButton.setText("Set vol");
        setVolButton.setToolTipText("Set the volume to the maximum \namount  you can buy with your \ncurrent cash balance.");
        setVolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setVolButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loadValuesButton)
                        .addGap(18, 18, 18)
                        .addComponent(setVolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limitSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volumeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(limitSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(volumeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setVolButton)
                    .addComponent(loadValuesButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadValuesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadValuesButtonActionPerformed
        this.loadFields();
    }//GEN-LAST:event_loadValuesButtonActionPerformed

    private void limitSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_limitSpinnerStateChanged
        setPrice();
    }//GEN-LAST:event_limitSpinnerStateChanged

    private void volumeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeSpinnerStateChanged
        setPrice();
    }//GEN-LAST:event_volumeSpinnerStateChanged

    private void setVolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setVolButtonActionPerformed
        Quote q = se.getBestPrice_0();
        Float price = q == null ? 0.0f : q.price;

        if (type == OrderType.BUYLIMIT) {
            //this.limitSpinner.setValue(se.roundMoney(price));
            this.volumeSpinner.setValue(se.roundShares(account.getCashAvailable()/ this.getLimit()));
        }
        if (type == OrderType.SELLLIMIT) {
            //  double avail = account.getSharesAvailable();
            this.volumeSpinner.setValue(se.roundShares(account.getSharesAvailable()));
        }        // TODO add your handling code here:
        this.volumeSpinner.revalidate();
    }//GEN-LAST:event_setVolButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    javax.swing.JSpinner limitSpinner;
    private javax.swing.JButton loadValuesButton;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JButton setVolButton;
    private javax.swing.JComboBox<String> typeComboBox;
    javax.swing.JSpinner volumeSpinner;
    // End of variables declaration//GEN-END:variables
}
