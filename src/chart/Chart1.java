package chart;

import gui.Globals;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import javax.swing.Scrollable;
import sesim.Exchange.QuoteReceiver;
import sesim.OHLCData;
import sesim.OHLCDataItem;
import sesim.Quote;

/**
 *
 * @author 7u83 <7u83@mail.ru>
 */
public class Chart1 extends javax.swing.JPanel implements QuoteReceiver, Scrollable {

    /**
     * Creates new form Chart1
     */
    public Chart1() {
        initComponents();
        System.out.printf("Now cursor\n");

        setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR));

        if (Globals.se == null) {
            return;
        }

        setSize(new Dimension(9000,500));
        Globals.se.addQuoteReceiver(this);
    }

    private int em_width;

    private void drawChart(Graphics2D g) {

        if (Globals.se==null)
            return;
      
        g.setColor(Color.red);
        g.drawLine(0, 0, 7000, 610);
        
        Dimension d = new Dimension(8000,200);
        setPreferredSize(d);
        
        revalidate();
        
        
        System.out.printf("Setting pref size\n" );
       
       
       
       
        OHLCData data = Globals.se.getOHLCdata(60000);

        int first_bar = 0;
        int last_bar = data.size();

        OHLCDataItem prev = null;
      
        for (int i = first_bar; i < last_bar; i++) {
            OHLCDataItem di = data.get(i);

            int x_unit_width = 1;
            int x = (int) (i * em_width * x_unit_width); 
            
            g.setColor(Color.red);
            g.drawLine(x, 0, x, 10);

//em_width;
            //this.drawItem(ctx, (int) (x - em_width * x_unit_width), x, prev, di); //, ctx.scaling, data.getMin());
            //    myi++;
            prev = di;

        }
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        // Calculate the number of pixels for 1 em
        em_width = g.getFontMetrics().stringWidth("M");

        
        
        drawChart((Graphics2D)g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void UpdateQuote(Quote q) {
        repaint();
    }

    @Override
    public Dimension getPreferredScrollableViewportSize() {
        return this.getPreferredSize();
    }

    @Override
    public int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction) {
        return 1;
    }

    @Override
    public int getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction) {
        return 1;
    }

    @Override
    public boolean getScrollableTracksViewportWidth() {
        return true;
    }

    @Override
    public boolean getScrollableTracksViewportHeight() {
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
