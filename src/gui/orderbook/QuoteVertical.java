/*
 * Copyright (c) 2017, 7u83 <7u83@mail.ru>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package gui.orderbook;

import gui.Globals;
import gui.tools.NummericCellRenderer;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.SwingUtilities;
import sesim.Exchange.QuoteReceiver;
import sesim.OrderBookEntry;
import sesim.Quote;

/**
 *
 * @author 7u83 <7u83@mail.ru>
 */
public class QuoteVertical extends javax.swing.JPanel implements QuoteReceiver {

    DecimalFormat dfm = new DecimalFormat("0.00#");
    DecimalFormat dfv = new DecimalFormat("0.#");
    ExecutorService executor = Executors.newSingleThreadExecutor();

    /**
     * Creates new form QuoteVertical
     */
    public QuoteVertical() {
        initComponents();
        if (Globals.sim == null) {
            return;
        }
        reset();
    }

    public final void reset() {
        Quote q = Globals.sim.se.getLastQuoete();
        this.UpdateQuote(q);
        Globals.sim.se.addQuoteReceiver(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        quoteLabel = new javax.swing.JLabel();
        volumeLabel = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(130, 32767));
        setMinimumSize(new java.awt.Dimension(130, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html><b>Price</b> (Vol)");

        quoteLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        quoteLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quoteLabel.setText("--"); // NOI18N
        quoteLabel.setFocusable(false);
        quoteLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        volumeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        volumeLabel.setText("(--)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(quoteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(volumeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quoteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volumeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel quoteLabel;
    private javax.swing.JLabel volumeLabel;
    // End of variables declaration//GEN-END:variables

    float last_price = -1;

    boolean busy;
    boolean update;
    Quote quote;

    @Override
    public void UpdateQuote(Quote q) {
        if (q == null) {
            return;
        }

        if (busy) {
            quote=q;
            update = true;
            return;
        }
        busy = true;
        update = true;

        executor.submit(new Runnable() {
            @Override
            public void run() {
                try {

                    while (update) {
                        Quote q=quote;
                        update = false;
                        javax.swing.SwingUtilities.invokeLater(() -> {
                            String text, vtext;
                            text = dfm.format(q.getPrice());
                            vtext = dfv.format(q.getVolume());

                            if (last_price == -1) {
                                text = "--";
                            } else if (q.getPrice() >= last_price) {
                                text = "<html>" + text + "<font color=\"green\">&#8593;</color></html>";
                            } else if (q.getPrice() < last_price) {
                                text = "<html>" + text + "<font color=\"red\">&#8595;</color></html>";
                            }
                            last_price = q.getPrice();
                            quoteLabel.setText(text);
                            volumeLabel.setText("(" + vtext + ")");
                        });

                        try {
                            Thread.sleep(50);   // update rate is limited 50 Hz
                        } catch (InterruptedException e) {
                        }
                    }

                } finally {
                    busy = false;
                }
            }
        });

    }

}
