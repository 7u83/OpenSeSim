/*
 * Copyright (c) 2016, 7u83 <7u83@mail.ru>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package Gui;

//import SeSim.*;
import static java.lang.Thread.sleep;
import javax.swing.AbstractListModel;
import javax.swing.table.AbstractTableModel;
import java.util.ArrayList;
import java.util.Formatter;

/**
 *
 * @author 7u83 <7u83@mail.ru>
 */
public class OrderBookPanel extends javax.swing.JPanel {

    SeSim.Exchange se;

    public OrderBookPanel() {
        this.se = MainWin.se;
        MainWin.myAccount.Sell(100, 820.0, MainWin.se);
        MainWin.myAccount.Sell(100, 90.0, MainWin.se);
        MainWin.myAccount.Sell(310, 112.156, MainWin.se);
        MainWin.myAccount.Sell(3, 112.156, MainWin.se);
        MainWin.myAccount.Sell(9, 1112.156, MainWin.se);
        MainWin.myAccount.Sell(17, 122.156, MainWin.se);
        MainWin.myAccount.Sell(100, 120.0, MainWin.se);
        MainWin.myAccount.Sell(100, 19.5, MainWin.se);
        MainWin.myAccount.Sell(100, 19.5, MainWin.se);
        MainWin.myAccount.Sell(100, 19.3, MainWin.se);


                    try {
                sleep(1000);
            } catch (InterruptedException e) {
                System.out.println("Interrupted");
                return;
            }


        MainWin.myAccount.Sell(310, 6112.156, MainWin.se);
        MainWin.myAccount.Sell(3, 7112.156, MainWin.se);

        MainWin.myAccount.Buy(100, 2.0, MainWin.se);
        MainWin.myAccount.Buy(100, 3.0, MainWin.se);
        MainWin.myAccount.Buy(100, 2.0, MainWin.se);
        MainWin.myAccount.Buy(100, 1.0, MainWin.se);
        MainWin.myAccount.Buy(100, 3.0, MainWin.se);
        MainWin.myAccount.Buy(100, 5.0, MainWin.se);

        initComponents();

        if (this.se == null) {
            return;
        }
        System.out.print("Order boo init\n");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        askBook1 = new Gui.AskBook();
        jLabel4 = new javax.swing.JLabel();
        bidBook1 = new Gui.BidBook();

        setPreferredSize(new java.awt.Dimension(220, 262));
        setLayout(new java.awt.GridBagLayout());

        askBook1.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(askBook1, gridBagConstraints);

        jLabel4.setText("123.00");
        jLabel4.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(jLabel4, gridBagConstraints);

        bidBook1.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(bidBook1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Gui.AskBook askBook1;
    private Gui.BidBook bidBook1;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
